{
  "test": "测试",
  "Question ": "问题 ",
  "Error ": "错误 ",
  "Info ": "提示 ",
  "Warning ": "警告 ",
  "Success ": "成功 ",
  "Usage ": "使用方式 ",
  "Create new task / template / template wiki for Edgeless Bot": "为 Edgeless Bot 创建新任务/模板/模板文档",
  "Please input value": "请输入内容",
  "Please input valid value matching ": "请输入匹配此正则表达式的内容：",
  "default": "默认",
  "Input index": "输入序号",
  "Please input index": "请输入序号",
  "Invalid input, please input index": "无效的输入，请输入序号",
  "Input out of range, please input index": "输入的序号超范围，请输入序号",
  "Please input 'y' or 'n'": "请输入 'y' 或 'n'",
  "Task name": "任务名称",
  "Producer template": "制作器模板",
  "External": "外置",
  "Use your own 'producer.ts' script to produce": "使用你自己编写的 'producer.ts' 完成制作",
  "Scraper required ": "爬虫模板要求的 ",
  "Producer required ": "制作器模板要求的 ",
  " parameter": " 参数",
  "array": "数组",
  "string": "字符串",
  "integer": "整数",
  "object": "对象",
  "split with ,": "使用 , 分割",
  "input Json string contained by {}": "输入使用{}包裹的Json对象字符串",
  "Click to Install": "双击安装",
  "Create a shortcut on the desktop to allow user's manually install or click to run": "在桌面上创建快捷方式让用户手动双击安装或运行",
  "Recursive Unzip": "递归解压",
  "Recursive unzip downloaded file by array \"recursiveUnzipList\", then create a shortcut on the desktop for \"sourceFile\";\nSuggested buildManifest : workflows/setup.toml,${taskName}/\"sourceFile\"": "根据指定的\"recursiveUnzipList\"递归地解压下载得到的文件，然后在桌面上创建一个快捷方式指向\"sourceFile\"\n推荐的构建装箱单 : workflows/setup.toml,${taskName}/\"sourceFile\"",
  "Task category": "任务分类",
  "Author": "作者",
  "Upstream URL": "上游URL",
  "Regex for downloaded file": "下载文件校验正则",
  "Scope": "软件域，通常取第二作者（例如 Microsoft/VSCode 中的 Microsoft，或 PortableApps/Firefox 中的 PortableApps）",
  "Build manifest, split file name with ,": "构建装箱单,使用 , 分割文件名",
  "Task config saved to ": "任务配置保存在 ",
  "test it with ": "使用此命令测试这个任务：",
  "Matched scraper template ": "匹配到爬虫模板 ",
  "No scraper template matched, use external scraper?": "未匹配到爬虫模板,是否使用外置爬虫脚本?",
  "Remember to add these keys manually later : ": "记得稍后手动添加这些键 : ",
  "Key description for ": "键释义 ",
  "Shortcut name for the downloaded file": "为下载的文件创建的快捷方式名称",
  "Shortcut name for the source file": "为指定文件(sourceFile)创建的快捷方式名称",
  "The file shortcut points to after recursive unzip, support regex contained by //": "递归解压后得到的目录内需要创建快捷方式的文件名称,支持被 // 包裹的正则表达式",
  "Directory or compressed files chain inside downloaded file, support regex contained by // (keep it a empty array if only downloaded file is needed to unzip)": "在下载到的文件内文件夹或递归解压文件的文件名链,支持被 // 包裹的正则表达式(如果只需要解压下载到的文件则将其置为空数组)",
  "Template type": "模板类型",
  "Scraper": "爬虫",
  "Resolver": "解析器",
  "Producer": "制作器",
  "Template title": "模板标题",
  "Template id, should be brief and without space": "模板唯一标识符,尽量简短且不能有空格",
  "Matching URL Regex, e.g. https?://github.com/[^/]+/[^/]+, keep empty to specify a universal template": "适用URL的正则表达式,示例 https?://github.com/[^/]+/[^/]+,缺省表示这是一个通用模板",
  "Required keys in task config, e.g. regex.scraper_version , split different objects with ,": "任务配置需要包含的键,示例 regex.scraper_version ,使用 , 分割不同的对象",
  "Required keys in task config, e.g. parameter.resolver_cd , split different objects with ,": "任务配置需要包含的键,示例 parameter.resolver_cd ,使用 , 分割不同的对象",
  "Template saved to ": "模板保存在 ",
  ", template register information saved to \"_register.ts\" in the same directory": ",模板注册信息保存在同目录下的 \"_register.ts\"",
  "Template description(use English)": "模板详细描述(使用英文)",
  "Default compress level, range from 1 to 10": "默认压缩等级，可接受范围 1-10",
  ", schema for \"producer_required\" object saved to ": ",用于\"producer_required\"对象的规则校验文件保存在 ",
  "Specify Json REST api url by \"scraper_temp.api_url\", and specify object path by \"scraper_temp.version_path\" \"scraper_temp.download_path\"": "通过\"scraper_temp.api_url\"指定Json REST api的url,并通过\"scraper_temp.version_path\" \"scraper_temp.download_path\"指定对象路径",
  "Use given regex to match text in html file, narrow the scope by specify jQuery selector in \"scraper_temp.download_selector\" \"scraper_temp.version_selector\"": "使用给定的正则表达式匹配html文件中的文本内容,通过在\"scraper_temp.download_selector\" \"scraper_temp.version_selector\"中指定jQuery选择器缩小匹配范围",
  "No universal scraper template found, consider modify task config manually later": "没有找到通用爬虫模板,请考虑稍后手动更改任务配置",
  "Universal scraper template": "通用爬虫模板",
  "If you want to show i18n version of your description, add key-value pair to \"./i18n/LOCALE.json\"": "如果你希望显示这条描述的中文版本,请在 \"./i18n/zh-CN.json\" 中增加键值对",
  "Parse redirection url to resolve version and direct download link, specify url by \"scraper_temp.redirection_url\"": "解析一个重定向的永久链接来获得版本号和下载直链,通过\"scraper_temp.redirection_url\"指定URL",
  "Global Page Match": "页面全局匹配",
  "Redirection Parse": "重定向解析",
  "Already exist, overwrite?": "已存在,覆盖?",
  "Execute downloaded file with argument (default \"/S\", can be specified by \"producer_required.argument\")": "追加静默安装参数运行下载到的文件(默认参数为 \"/S\",可以通过\"producer_required.argument\"指定)",
  "Silent Install": "静默安装",
  "Special designed for PortableApps": "专用于PortableApps软件源",
  "Scraper required parameter：": "爬虫模板要求的参数：",
  "Create wiki for": "需要为哪个模板创建文档？",
  "Create new wiki for ": "为 ",
  " template ": " 类型的模板创建文档 : ",
  " (exist)": " (已存在)",
  "Wiki template saved to ": "文档模板保存在 ",
  ", modify it to add more information": ",编辑此文件增加更多信息",
  "Use \"string\" as the type of required keys, modify if discrepant": "使用 \"string\" 作为必须提供的参数的类型,如果矛盾请修改",
  "Silent installing argument": "静默安装参数",
  "Delete installer after installing": "是否在安装完成后删除安装包",
  "Given name or entrance already registered in ": "指定的名称或入口已经注册到 ",
  ", delete register node before continue": ", 如需继续请先将对应的注册信息删除",
  "Parse Scoop Bucket to resolve version and direct download link, specify url by \"scraper_temp.bucketName\" and \"scraper_temp.taskName\"": "通过 Scoop Bucket 解析版本号和下载链接, 需要指定 \"scraper_temp.bucketName\" 和 \"scraper_temp.taskName\"",
  "Recommended manifest, ": "推荐的构建装箱单，",
  "description": "描述，通常是从官网选取的20字左右简介",
  "language": "语言"
}
